name: Assets update

on:
  schedule:
    - cron: "6 */6 * * *"

  workflow_dispatch:

jobs:
  plan:
    name: Plan update
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        package-storage-ref: ["production", "staging", "snapshot"]

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Checkout assets
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          ref: ${{ matrix.package-storage-ref }}
          path: assets/${{ matrix.package-storage-ref }}

      - name: Checkout packages
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          repository: elastic/package-storage
          ref: ${{ matrix.package-storage-ref }}
          path: packages/${{ matrix.package-storage-ref }}

      - name: Setup Python
        uses: actions/setup-python@e9aba2c848f5ebd159c070c61ea2c4e2b122355e # v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: make prereq

      - name: Make an update plan
        id: update-plan
        run: |
          echo "::set-output name=need-update::$(
            if [ -n "$(python3 -m bot plan | tee /dev/stderr)" ]; then
              echo yes
            else
              echo no
            fi
          )"

      - name: Install Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
        if: ${{ steps.update-plan.outputs.need-update == 'yes' }}
        with:
          go-version: '>=1.19.1'

      - name: Install elastic-package
        if: ${{ steps.update-plan.outputs.need-update == 'yes' }}
        run: |
          go version
          go install github.com/elastic/elastic-package@latest
          ~/go/bin/elastic-package version

      - name: Start the stack
        if: ${{ steps.update-plan.outputs.need-update == 'yes' }}
        run: make stack-up ELASTIC_PACKAGE=~/go/bin/elastic-package

      - name: Update assets
        if: ${{ steps.update-plan.outputs.need-update == 'yes' }}
        run: |
          git config --global user.name "The Elastic Assets Bot"
          git config --global user.email "noreply@elastic.co"
          export PATH=$PATH:~/go/bin
          eval "$(elastic-package stack shellinit)"
          python3 -m bot update

      - name: Push assets
        if: ${{ steps.update-plan.outputs.need-update == 'yes' }}
        run: |
          git -C assets/${{ matrix.package-storage-ref }} push

      - name: Stop the stack
        if: ${{ steps.update-plan.outputs.need-update == 'yes' }}
        run: make stack-down ELASTIC_PACKAGE=~/go/bin/elastic-package
